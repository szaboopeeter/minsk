namespace Minsk.CodeAnalysis.Syntax
{
    public enum SyntaxKind
    {
        // Tokens
        AmpersandAmpersandToken,
        AmpersandToken,
        BadToken,
        BangEqualsToken,
        BangToken,
        CloseBraceToken,
        CloseParenthesisToken,
        ColonToken,
        CommaToken,
        EndOfFileToken,
        EqualsEqualsToken,
        EqualsToken,
        GraterOrEqualsToken,
        GreaterToken,
        HatToken,
        IdentifierToken,
        LessOrEqualsToken,
        LessToken,
        MinusToken,
        NumberToken,
        OpenBraceToken,
        OpenParenthesisToken,
        PipePipeToken,
        PipeToken,
        PlusToken,
        SlashToken,
        StarToken,
        StringToken,
        TildeToken,
        WhiteSpaceToken,

        // Keywords
        BreakKeyword,
        ContinueKeyword,
        DoKeyword,
        ElseKeyword,
        FalseKeyword,
        ForKeyword,
        FunctionKeyword,
        IfKeyword,
        LetKeyword,
        ReturnKeyword,
        ToKeyword,
        TrueKeyword,
        VarKeyword,
        WhileKeyword,

        // Nodes
        CompilationUnit,
        GlobalStatement,
        FunctionDeclaration,
        Parameter,
        ElseClause,
        TypeClause,

        // Statements
        BlockStatement,
        BreakStatement,
        ContinueStatement,
        DoWhileStatement,
        ExpressionStatement,
        ForStatement,
        IfStatement,
        ReturnStatement,
        VariableDeclaration,
        WhileStatement,

        // Expressions
        AssignmentExpression,
        BinaryExpression,
        CallExpression,
        LiteralExpression,
        NameExpression,
        ParenthesizedExpression,
        UnaryExpression,
    }
}
